name: Create New Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Clean build environment
        run: |
          rm -rf build
          rm -rf upload
          mkdir -p build upload

      - name: Install dependencies (packages)
        run: |
          curl -LO https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_macosx_x86_64
          sudo install -m755 ldid_macosx_x86_64 /usr/local/bin/ldid
          brew install 7zip gnu-sed

      - name: Cache Homebrew
        uses: actions/cache@v3
        with:
          path: /Users/runner/Library/Caches/Homebrew
          key: ${{ runner.os }}-homebrew-${{ hashFiles('**/Brewfile.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-homebrew-

      - name: Cache Ruby gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Compile
        run: | 
          make package SCHEME="'feather (Release)'" OPTIMIZATION_LEVEL=-Onone
          mv packages/* upload/

      - name: Get Version Number
        id: get_version
        run: |
          VERSION=$( /usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" Payload/feather.app/Info.plist )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Setup
        run: |
          mv upload/feather.ipa upload/feather_v${VERSION}.ipa
          cp upload/feather_v${VERSION}.ipa upload/feather_v${VERSION}.tipa

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: upload/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Feather v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          files: |
            upload/*ipa
          generate_release_notes: true
          fail_on_unmatched_files: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Build Success
        if: success()
        run: echo "Build and release process completed successfully."

      - name: Notify Build Failure
        if: failure()
        run: echo "Build and release process failed."