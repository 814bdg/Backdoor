name: Create New Release

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest # Use macos-latest for the latest Xcode

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable' # Or a specific version that supports the latest swift

      - name: Clean build environment
        run: |
          rm -rf build upload
          mkdir -p build upload

      - name: Install dependencies (packages)
        run: |
          brew update
          curl -LO https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_macosx_x86_64
          sudo install -m755 ldid_macosx_x86_64 /usr/local/bin/ldid
          brew install 7zip gnu-sed

      - name: Cache Homebrew
        uses: actions/cache@v3
        with:
          path: /Users/runner/Library/Caches/Homebrew
          key: ${{ runner.os }}-homebrew-${{ hashFiles('**/Brewfile.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-homebrew-

      - name: Compile
        run: |
          make package SCHEME="'feather (Release)'" OPTIMIZATION_LEVEL=-Onone
          mv packages/* upload/

      - name: Get Version Number
        id: get_version
        run: |
          VERSION=$( /usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" Payload/backdoor.app/Info.plist )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Setup
        run: |
          mv upload/backdoor.ipa upload/backdoor_v${VERSION}.ipa
          cp upload/backdoor_v${VERSION}.ipa upload/backdoor_v${VERSION}.tipa

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Backdoor v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          files: |
            upload/*ipa
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Build Success
        if: success()
        run: echo "Build and release process completed successfully."

      - name: Notify Build Failure
        if: failure()
        continue-on-error: true
        run: echo "Build and release process failed."

  retrieve_logs:
    needs: build
    runs-on: ubuntu-latest
    if: always() # This job will run regardless of the previous job's outcome
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Retrieve Workflow Logs
        uses: Superbasil3/retrieve-workflow-logs-action@v0.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          keep-only-error-files: true