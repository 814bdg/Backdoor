name: Analyze Swift Build

on:
  workflow_run:
    workflows: ["Create New Release"] # Replace with your Swift build workflow name
    types:
      - completed

jobs:
  analyze-failure:
    runs-on: macos-latest # Or ubuntu-latest, depending on your build environment
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Check out repo content
        uses: actions/checkout@v3

      - name: Get failed job ID
        id: get_job_id
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JOB_ID=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/jobs -q '.jobs[] | select(.conclusion == "failure") | .id' | head -n 1)
          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV

      - name: Get logs from failed job
        id: get_logs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -z "$JOB_ID" ]]; then
            echo "No failed jobs found."
            exit 0
          fi
          LOGS=$(gh api /repos/${{ github.repository }}/actions/jobs/$JOB_ID/logs)
          echo "LOGS<<EOF" >> $GITHUB_OUTPUT
          echo "$LOGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Save Logs to File
        run: |
          echo "${{ steps.get_logs.outputs.LOGS }}" > build.log

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' # Use the latest stable Python version

      - name: Run Python Script to Extract Errors
        run: |
          python scripts/extract_swift_errors.py build.log