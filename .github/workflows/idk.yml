name: Build iOS Dylib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Framework
        run: |
          mkdir -p cpux_lib.framework/Headers
          cp cpux_lib.h cpux_lib.framework/Headers/
          clang -target arm64-apple-ios14.0 -isysroot $(xcrun --sdk iphoneos --show-sdk-path) -fPIC -c cpux_lib.c -o cpux_lib.o
          libtool -static cpux_lib.o -o cpux_lib.framework/cpux_lib
          mkdir -p cpux_lib.framework/Modules
          echo 'framework module cpux_lib { header "cpux_lib.h" export * }' > cpux_lib.framework/Modules/module.modulemap

      - name: Create XCFramework
        run: |
          xcodebuild -create-xcframework -framework cpux_lib.framework -output cpux_lib.xcframework

      - name: Set Release Tag
        id: set_release_tag
        run: echo "RELEASE_TAG=Dylib" >> $GITHUB_ENV

      - name: Get Release By Tag
        id: get_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/releases/tags/${{ env.RELEASE_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_SECRET }}

      - name: Update Release
        id: update_release
        uses: octokit/request-action@v2.x
        with:
          route: PATCH /repos/${{ github.repository }}/releases/${{ steps.get_release.outputs.data.id }}
          release_id: ${{ steps.get_release.outputs.data.id }}
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release Dylib
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_SECRET }}

      - name: Upload Framework to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.update_release.outputs.upload_url }}
          asset_path: cpux_lib.xcframework
          asset_name: cpux_lib.xcframework
          asset_content_type: application/zip
        env:
          WORKFLOW_SECRET: ${{ secrets.WORKFLOW_SECRET }}