name: Build iOS Dylib

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Framework
        run: |
          mkdir -p cpux_lib.framework/Headers
          cp cpux_lib.h cpux_lib.framework/Headers/
          clang -target arm64-apple-ios14.0 -isysroot $(xcrun --sdk iphoneos --show-sdk-path) -fPIC -c cpux_lib.c -o cpux_lib.o
          libtool -static cpux_lib.o -o cpux_lib.framework/cpux_lib
          mkdir -p cpux_lib.framework/Modules
          echo 'framework module cpux_lib { header "cpux_lib.h" export * }' > cpux_lib.framework/Modules/module.modulemap

      - name: Create XCFramework
        run: |
          xcodebuild -create-xcframework -framework cpux_lib.framework -output cpux_lib.xcframework

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_SECRET }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          draft: false
          prerelease: false

      - name: Upload Framework to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cpux_lib.xcframework
          asset_name: cpux_lib.xcframework
          asset_content_type: application/zip